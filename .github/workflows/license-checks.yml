name: License Check

on:
  push:
    branches:
    - main
    - self-managed/*
    tags:
    - '*'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup fossa-cli
      uses: clementnero/demo-licensing/.github/actions/fossa/setup@add-licensing-checks
    - name: Get product context
      id: product
      env:
        PRODUCT_CONTEXT: >
          ${{
            startsWith(github.ref_name,'saas/') && 'saas' || 
            startsWith(github.ref_name,'self-managed/') && 'self-managed' ||
            ''
          }}
      run: |
        echo "context=${PRODUCT_CONTEXT}" >> $GITHUB_OUTPUT
    - name: Update FOSSA configuration with product context ${{ steps.product.outputs.context }}
      if: steps.product.outputs.context != ''
      env:
        PRODUCT_CONTEXT: ${{ steps.product.outputs.context }}
        SAAS_MAVEN_PACKAGES: |
          - type: maven
            path: restapi
            target: io.camunda:modeler-restapi-saas
        SELF_MANAGED_MAVEN_PACKAGES: |
          - type: maven
            path: restapi
            target: io.camunda:modeler-restapi-self-managed
      run: |
        # Exclude Maven packages not relevant to the current product context
        if [[ "$PRODUCT_CONTEXT" == "saas" ]]; then
          echo "$SELF_MANAGED_MAVEN_PACKAGES" | yq -i '.targets.exclude += load_str("/dev/stdin")' .fossa.yml
        elif [[ "$PRODUCT_CONTEXT" == "self-managed" ]]; then
          echo "$SAAS_MAVEN_PACKAGES" | yq -i '.targets.exclude += load_str("/dev/stdin")' .fossa.yml
        fi
        cat .fossa.yml

     # - name: Analyze project
    #   uses: clementnero/demo-licensing/.github/actions/fossa/analyze@add-licensing-checks
    #   with:
    #     api-key: ${{ secrets.FOSSA_API_KEY }}
    #     branch: ${{ github.ref_name }} # available for push events
    #     revision-id: ${{ github.sha }} # available for push events

# targets:
#   exclude:
#   # qa
#   - type: maven
#     path: bom/
#     target: io.camunda:camunda-qa